//Pure CSS Mixins
.pure-mixin-hidden() {
    display: none !important;
}

.pure-mixin-inline-block() {
    display: inline-block;
    *display: inline;
    *zoom: 1;
    vertical-align: middle;
}

.pure-mixin-img() {
    max-width: 100%;
    height: auto;
    display: block;
}

.pure-mixin-button-core() {
    // Structure
    display: inline-block;
    zoom: 1;
    line-height: normal;
    white-space: nowrap;
    vertical-align: middle;
    text-align: center;
    cursor: pointer;
    -webkit-user-drag: none;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    box-sizing: border-box;

    &::-moz-focus-inner {
        // Firefox: Get rid of the inner focus border
        padding: 0;
        border: 0;
    }
}

.pure-mixin-button(@background: #E6E6E6, @color: rgba(0, 0, 0, 0.80), @colorFallback: #444) {
    font-family: inherit;
    font-size: 100%;
    padding: 0.5em 1em;
    color: @colorFallback; // rgba not supported (IE 8)
    color: @color; // rgba supported
    border: 1px solid #999;  // IE 6/7/8
    border: none rgba(0, 0, 0, 0);  // IE9 + everything else
    background-color: @background;
    text-decoration: none;
    border-radius: 2px;

    &-hover,
    &:hover,
    &:focus {
        filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#00000000', endColorstr='#1a000000',GradientType=0);
        background-image: -webkit-gradient(linear, 0 0, 0 100%, from(transparent), color-stop(40%, rgba(0,0,0, 0.05)), to(rgba(0,0,0, 0.10)));
        background-image: -webkit-linear-gradient(transparent, rgba(0,0,0, 0.05) 40%, rgba(0,0,0, 0.10));
        background-image: -moz-linear-gradient(top, rgba(0,0,0, 0.05) 0%, rgba(0,0,0, 0.10));
        background-image: -o-linear-gradient(transparent, rgba(0,0,0, 0.05) 40%, rgba(0,0,0, 0.10));
        background-image: linear-gradient(transparent, rgba(0,0,0, 0.05) 40%, rgba(0,0,0, 0.10));
    }

    &:focus {
        outline: 0;
    }

    &-active,
    &:active {
        box-shadow: 0 0 0 1px rgba(0,0,0, 0.15) inset, 0 0 6px rgba(0,0,0, 0.20) inset;
        border-color: #000\9;
    }

    &[disabled],
    &-disabled,
    &-disabled:hover,
    &-disabled:focus,
    &-disabled:active {
        border: none;
        background-image: none;
        filter: progid:DXImageTransform.Microsoft.gradient(enabled = false);
        filter: alpha(opacity=40);
        -khtml-opacity: 0.40;
        -moz-opacity: 0.40;
        opacity: 0.40;
        cursor: not-allowed;
        box-shadow: none;
    }

    &-hidden {
        display: none;
    }

    &::-moz-focus-inner {
        // Firefox: Get rid of the inner focus border
        padding: 0;
        border: 0;
    }
}

.pure-mixin-button-primary(@background: rgb(0, 120, 231), @color: #fff) {
    &,
    a& {
        background-color: @background;
        color: @color;
    }
}

.pure-mixin-button-responsive() {
    margin: 0.7em 0 0;
}

.pure-mixin-field() {
    padding: 0.5em 0.6em;
    display: inline-block;
    border: 1px solid #ccc;
    box-shadow: inset 0 1px 3px #ddd;
    border-radius: 4px;
    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    box-sizing: border-box;
}

// Chrome (as of v.32/34 on OS X) needs additional room for color to display.
// May be able to remove this tweak as color inputs become more standardized across browsers.
.pure-mixin-field-color() {
    padding: 0.2em 0.5em;
}

.pure-mixin-field-responsive() {
    margin-bottom: 0.3em;
    display: block;
}

.pure-mixin-field-rounded() {
    border-radius: 2em;
    padding: 0.5em 1em;
}

.pure-mixin-field-stacked() {
    display: block;
    margin: 0.25em 0;
}

.pure-mixin-field-disabled() {
    cursor: not-allowed;
    background-color: #eaeded;
    color: #cad2d3;
}

.pure-mixin-field-readonly() {
    background-color: #eee; // menu hover bg color
    color: #777; // menu text color
    border-color: #ccc;
}

.pure-mixin-field-focused() {
    outline: 0;
    border-color: #129FEA;
}

.pure-mixin-field-focused-special() {
    outline: thin solid #129FEA;
    outline: 1px auto #129FEA;
}

.pure-mixin-field-focused-special-invalid() {
    outline-color: #e9322d;
}

.pure-mixin-field-focused-invalid() {
    color: #b94a48;
    border-color: #e9322d;
}

.pure-mixin-legend() {
    display: block;
    width: 100%;
    padding: 0.3em 0;
    margin-bottom: 0.3em;
    color: #333;
    border-bottom: 1px solid #e5e5e5;
}

.pure-mixin-label() {
    margin: 0.5em 0 0.2em;
}

.pure-mixin-label-wrap() {
    margin: 0.5em 0;
    display: block;
}

.pure-mixin-fieldset() {
    margin: 0;
    padding: 0.35em 0 0.75em;
    border: 0;
}

.pure-mixin-select() {
    // Normalizes the height; padding is not sufficient.
    height: 2.25em;
    border: 1px solid #ccc;
    background-color: white;

    &[multiple] {
        height: auto;
    }
}

.pure-mixin-form-message() {
    display: block;
    color: #666;
    font-size: 0.875em;
}

.pure-mixin-message-inline() {
    display: inline-block;
    padding-left: 0.3em;
    color: #666;
    vertical-align: middle;
    font-size: 0.875em;
}

.pure-mixin-fields-group() {
    fieldset {
        .pure-mixin-fields-group-fieldset()
    }
    input,
    textarea {
        .pure-mixin-fields-group-field();

        &:focus {
            z-index: 3;
        }

        &:first-child {
            top: 1px;
            border-radius: 4px 4px 0 0;
            margin: 0;

            &:last-child {
                top: 1px;
                border-radius: 4px;
                margin: 0;
            }
        }

        &:last-child {
            top: -2px;
            border-radius: 0 0 4px 4px;
            margin: 0;
        }
    }

    button { .pure-mixin-fields-group-button() }
}

.pure-mixin-fields-group-responsive() {
    input:not([type]),
    input[type="text"],
    input[type="password"],
    input[type="email"],
    input[type="url"],
    input[type="date"],
    input[type="month"],
    input[type="time"],
    input[type="datetime"],
    input[type="datetime-local"],
    input[type="week"],
    input[type="number"],
    input[type="search"],
    input[type="tel"],
    input[type="color"] { .pure-mixin-fields-group-field-responsive() }
}

.pure-mixin-fields-group-fieldset() {
    margin-bottom: 10px;
}

.pure-mixin-fields-group-field() {
    display: block;
    padding: 10px;
    margin: 0 0 -1px;
    border-radius: 0;
    position: relative;
    top: -1px;
}

.pure-mixin-fields-group-field-responsive() {
    margin-bottom: 0;
}

.pure-mixin-fields-group-button() {
    margin: 0.35em 0;
}

.pure-mixin-form() {
    input[type="text"],
    input[type="password"],
    input[type="email"],
    input[type="url"],
    input[type="date"],
    input[type="month"],
    input[type="time"],
    input[type="datetime"],
    input[type="datetime-local"],
    input[type="week"],
    input[type="number"],
    input[type="search"],
    input[type="tel"],
    input[type="color"],
    select,
    textarea {
        .pure-mixin-field();
        vertical-align: middle;
    }

    input:not([type]) {
        // Need to separate out the :not() selector from the rest of the CSS 2.1 selectors
        // since IE8 won't execute CSS that contains a CSS3 selector.
        .pure-mixin-field();
    }

    input[type="color"] { .pure-mixin-field-color() }

    input[type="text"],
    input[type="password"],
    input[type="email"],
    input[type="url"],
    input[type="date"],
    input[type="month"],
    input[type="time"],
    input[type="datetime"],
    input[type="datetime-local"],
    input[type="week"],
    input[type="number"],
    input[type="search"],
    input[type="tel"],
    input[type="color"],
    select,
    textarea {
        &:focus {
            .pure-mixin-field-focused();
        }
    }

    // Need to separate out the :not() selector from the rest of the CSS 2.1 selectors
    // since IE8 won't execute CSS that contains a CSS3 selector.
    input:not([type]) {
        &:focus {
            .pure-mixin-field-focused();
        }
    }

    input[type="file"],
    input[type="radio"],
    input[type="checkbox"] {
        &:focus {
            .pure-mixin-field-focused-special()
        }
    }

    .pure-checkbox,
    .pure-radio { .pure-mixin-label-wrap() }

    input[type="text"][disabled],
    input[type="password"][disabled],
    input[type="email"][disabled],
    input[type="url"][disabled],
    input[type="date"][disabled],
    input[type="month"][disabled],
    input[type="time"][disabled],
    input[type="datetime"][disabled],
    input[type="datetime-local"][disabled],
    input[type="week"][disabled],
    input[type="number"][disabled],
    input[type="search"][disabled],
    input[type="tel"][disabled],
    input[type="color"][disabled],
    select[disabled],
    textarea[disabled] { .pure-mixin-field-disabled() }

    // Need to separate out the :not() selector from the rest of the CSS 2.1 selectors
    // since IE8 won't execute CSS that contains a CSS3 selector.
    input:not([type])[disabled] { .pure-mixin-field-disabled() }

    input,
    select,
    textarea {
        &[readonly]     { .pure-mixin-field-readonly() }
        &:focus:invalid { .pure-mixin-field-focused-invalid() }
    }

    input[type="file"],
    input[type="radio"],
    input[type="checkbox"] {
        &:focus:invalid:focus {
            .pure-mixin-field-focused-special-invalid()
        }
    }

    select { .pure-mixin-select() }

    label { .pure-mixin-label() }

    fieldset { .pure-mixin-fieldset() }

    legend { .pure-mixin-legend() }

    &-stacked {
        input[type="text"],
        input[type="password"],
        input[type="email"],
        input[type="url"],
        input[type="date"],
        input[type="month"],
        input[type="time"],
        input[type="datetime"],
        input[type="datetime-local"],
        input[type="week"],
        input[type="number"],
        input[type="search"],
        input[type="tel"],
        input[type="color"],
        input[type="file"],
        select,
        label,
        textarea {
            .pure-mixin-field-stacked()
        }

        input:not([type]) {
            // Need to separate out the :not() selector from the rest of the CSS 2.1 selectors
            // since IE8 won't execute CSS that contains a CSS3 selector.
            .pure-mixin-field-stacked()
        }
    }

    &-message-inline {
        .pure-mixin-inline-block()
    }

    &-aligned {
        input,
        textarea,
        select,
        // NOTE: pure-help-inline is deprecated. Use &-message-inline instead.
        .pure-help-inline {
            .pure-mixin-inline-block()
        }

        textarea {
            vertical-align: top;
        }
    }

    // Aligned Forms
    &-aligned {
        .pure-control-group       { .pure-mixin-form-aligned-control-group() }
        .pure-control-group label { .pure-mixin-form-aligned-control-group-label()}
        .pure-controls            { .pure-mixin-form-aligned-controls() }
    }

    // Rounded Inputs
    input.pure-input-rounded,
    .pure-input-rounded {
        .pure-mixin-field-rounded()
    }

    // Grouped Inputs
    .pure-group { .pure-mixin-fields-group() }

    .pure-input {
        &-1   { width: 100% }
        &-3-4 { width:  75% }
        &-2-3 { width:  66% }
        &-1-2 { width:  50% }
        &-1-3 { width:  33% }
        &-1-4 { width:  25% }
    }

    // Inline help for forms
    // NOTE: pure-help-inline is deprecated. Use .pure-form-message-inline instead.
    .pure-help-inline,
    &-message-inline { .pure-mixin-message-inline() }

    // Block help for forms
    &-message { .pure-mixin-form-message() }
}

.pure-mixin-form-responsive() {
    button[type="submit"] {
        .pure-mixin-button-responsive()
    }

    input:not([type]),
    input[type="text"],
    input[type="password"],
    input[type="email"],
    input[type="url"],
    input[type="date"],
    input[type="month"],
    input[type="time"],
    input[type="datetime"],
    input[type="datetime-local"],
    input[type="week"],
    input[type="number"],
    input[type="search"],
    input[type="tel"],
    input[type="color"],
    label { .pure-mixin-field-responsive() }
}

.pure-mixin-form-aligned-responsive() {
    &-aligned .pure-control-group label { .pure-mixin-form-aligned-control-group-label-responsive() }
    &-aligned .pure-controls { .pure-mixin-form-aligned-controls-responsive() }
}

.pure-mixin-form-aligned-control-group() {
    margin-bottom: 0.5em;
}

.pure-mixin-form-aligned-control-group-label() {
    text-align: right;
    display: inline-block;
    vertical-align: middle;
    width: 10em;
    margin: 0 1em 0 0;
}

.pure-mixin-form-aligned-control-group-label-responsive() {
    margin-bottom: 0.3em;
    text-align: left;
    display: block;
    width: 100%;
}

.pure-mixin-form-aligned-controls() {
    margin: 1.5em 0 0 11em;
}

.pure-mixin-form-aligned-controls-responsive() {
    margin: 1.5em 0 0 0;
}

.pure-mixin-form-message-responsive() {
    // NOTE: pure-help-inline is deprecated. Use &-message-inline instead.
    display: block;
    font-size: 0.75em;
    // Increased bottom padding to make it group with its related input element.
    padding: 0.2em 0 0.8em;
}

.pure-mixin-form-messages-responsive() {
    .pure-help-inline,
    &-message-inline,
    &-message { .pure-mixin-form-message-responsive() }
}

// Opera as of 12 on Windows needs word-spacing.
// The ".opera-only" selector is used to prevent actual prefocus styling
// and is not required in markup.
.pure-mixin-g-word-spacing() {
    word-spacing: -0.43em;
}

.pure-mixin-g() {
    letter-spacing: -0.31em; // Webkit: collapse white-space between units
    *letter-spacing: normal; // reset IE < 8
    *word-spacing: -0.43em; // IE < 8: collapse white-space between units
    text-rendering: optimizespeed; // Webkit: fixes text-rendering: optimizeLegibility

    // Sets the font stack to fonts known to work properly with the above letter
    // and word spacings. See: https://github.com/yahoo/pure/issues/41/
    //
    // The following font stack makes Pure Grids work on all known environments.
    //
    // * FreeSans: Ships with many Linux distros, including Ubuntu
    //
    // * Arimo: Ships with Chrome OS. Arimo has to be defined before Helvetica and
    //   Arial to get picked up by the browser, even though neither is available
    //   in Chrome OS.
    //
    // * Droid Sans: Ships with all versions of Android.
    //
    // * Helvetica, Arial, sans-serif: Common font stack on OS X and Windows.

    font-family: FreeSans, Arimo, "Droid Sans", Helvetica, Arial, sans-serif;

    // Use flexbox when possible to avoid `letter-spacing` side-effects.
    //
    // NOTE: Firefox (as of 25) does not currently support flex-wrap, so the
    // `-moz-` prefix version is omitted.
    display: -webkit-flex;
    -webkit-flex-flow: row wrap;

    // IE10 uses display: flexbox
    display: -ms-flexbox;
    -ms-flex-flow: row wrap;

    // Prevents distributing space between rows
    -ms-align-content: flex-start;
    -webkit-align-content: flex-start;
    align-content: flex-start;
}

.pure-mixin-u() {
    display: inline-block;
    *display: inline; // IE < 8: fake inline-block
    zoom: 1;
    letter-spacing: normal;
    word-spacing: normal;
    vertical-align: top;
    text-rendering: auto;
}

.pure-mixin-menu-core() {
    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    box-sizing: border-box;

    &-fixed {
        position: fixed;
        left: 0;
        top: 0;
        z-index: 3;
    }

    &-list,
    &-item {
        position: relative;
    }

    &-list {
        list-style: none;
        margin: 0;
        padding: 0;
    }

    &-item {
        padding: 0;
        margin: 0;
        height: 100%;
    }

    &-link,
    &-heading {
        display: block;
        text-decoration: none;
        white-space: nowrap;
    }
}

.pure-mixin-menu-dropdown() {
    // Submenus should still be display: block;
    &-item &-item {
        display: block;
    }

    &-children {
        display: none;
        position: absolute;
        left: 100%;
        top: 0;
        margin: 0;
        padding: 0;
        z-index: 3;
    }

    &-horizontal &-children {
        left: 0;
        top: auto;
        width: inherit;
    }

    &-allow-hover:hover > &-children,
    &-active > &-children {
        display: block;
        position: absolute;
    }

    // Vertical Menus - show the dropdown arrow
    &-has-children > &-link:after {
        padding-left: 0.5em;
        content: "\25B8";
        font-size: small;
    }

    // Horizontal Menus - show the dropdown arrow
    &-horizontal &-has-children > &-link:after {
        content: "\25BE";
    }
}

.pure-mixin-menu-horizontal-menu-list() {
    display: inline-block;
}

.pure-mixin-menu-horizontal-element() {
    display: inline-block;
    *display: inline;
    zoom: 1;
    vertical-align: middle;
}

.pure-mixin-menu-horizontal() {
    width: 100%;
    white-space: nowrap;

    .pure-menu-list { .pure-mixin-menu-horizontal-menu-list() }

    // Initial menus should be inline-block so that they are horizontal
    .pure-menu-item,
    .pure-menu-heading,
    .pure-menu-separator { .pure-mixin-menu-horizontal-element() }
}

.pure-mixin-menu-scrollable-menu-list() {
    display: block;
}

.pure-mixin-menu-horizontal-scrollable() {
    white-space: nowrap;
    overflow-y: hidden;
    overflow-x: auto;
    -ms-overflow-style: none;
    -webkit-overflow-scrolling: touch;
    // a little extra padding for this style to allow for scrollbars
    padding: .5em 0;

    &::-webkit-scrollbar {
        display: none;
    }
}

.pure-mixin-menu-horizontal-scrollable-menu-list() {
    display: inline-block;
}

.pure-mixin-menu-scrollable() {
    overflow-y: scroll;
    overflow-x: hidden;

    .pure-menu-list { .pure-mixin-menu-scrollable-menu-list() }

    .pure-menu-horizontal& {
        .pure-mixin-menu-horizontal-scrollable();
        .pure-menu-list { .pure-mixin-menu-horizontal-scrollable-menu-list() }
    }
}

.pure-mixin-menu-skin() {
    &-separator {
        background-color: #ccc;
        height: 1px;
        margin: .3em 0;
    }

    &-horizontal &-separator {
        width: 1px;
        height: 1.3em;
        margin: 0 .3em ;
    }

    &-heading {
        text-transform: uppercase;
        color: #565d64;
    }

    &-link {
        color: #777;
    }

    &-children {
        background-color: #fff;
    }

    &-link,
    &-disabled,
    &-heading {
        padding: .5em 1em;
    }

    &-disabled {
        opacity: .5;
    }

    &-disabled &-link:hover {
        background-color: transparent;
    }

    &-active > &-link,
    &-link:hover,
    &-link:focus {
        background-color: #eee;
    }

    &-selected &-link,
    &-selected &-link:visited {
        color: #000;
    }
}

.pure-mixin-table() {
    // Remove spacing between table cells (from Normalize.css)
    border-collapse: collapse;
    border-spacing: 0;
    empty-cells: show;
    border: 1px solid #cbcbcb;

    caption {
        color: #000;
        font: italic 85%/1 arial, sans-serif;
        padding: 1em 0;
        text-align: center;
    }

    td,
    th {
        border-left: 1px solid #cbcbcb;//  inner column border
        border-width: 0 0 0 1px;
        font-size: inherit;
        margin: 0;
        overflow: visible; // to make ths where the title is really long work
        padding: 0.5em 1em; // cell padding
    }

    // Consider removing this next declaration block, as it causes problems when
    // there's a rowspan on the first cell. Case added to the tests. issue#432
    td:first-child,
    th:first-child {
        border-left-width: 0;
    }

    thead {
        background-color: #e0e0e0;
        color: #000;
        text-align: left;
        vertical-align: bottom;
    }

    // striping:
    // even - #fff (white)
    // odd  - #f2f2f2 (light gray)
    td {
        background-color: transparent;
    }
    &-odd td {
        background-color: #f2f2f2;
    }

    // nth-child selector for modern browsers
    &-striped tr:nth-child(2n-1) td {
        background-color: #f2f2f2;
    }

    // BORDERED TABLES
    &-bordered td {
        border-bottom: 1px solid #cbcbcb;
    }
    &-bordered tbody > tr:last-child > td {
        border-bottom-width: 0;
    }

    // HORIZONTAL BORDERED TABLES

    &-horizontal td,
    &-horizontal th {
        border-width: 0 0 1px 0;
        border-bottom: 1px solid #cbcbcb;
    }
    &-horizontal tbody > tr:last-child > td {
        border-bottom-width: 0;
    }
}
